{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Videos\\\\Contacts\\\\client\\\\src\\\\Pages\\\\ContactList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// import Navbar from \"react-bootstrap/Navbar\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n// import Form from \"react-bootstrap/Form\";\n// import InputGroup from \"react-bootstrap/InputGroup\";\nimport ContactSearch from \"../Utilities/ContactSearch\";\nimport { showdataRoute } from \"../Resources/ApiKeys\";\nimport MyNavbar from \"../Utilities/MyNavbar\";\nimport Modals from \"../Utilities/Modals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [contacts, setContacts] = useState([]);\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    (async () => {\n      if (!localStorage.getItem(\"new-user\")) {\n        navigate(\"/login\");\n      } else {\n        setCurrentUser(await JSON.parse(localStorage.getItem(\"new-user\")));\n      }\n    })();\n  }, []);\n  let user = {};\n  if (currentUser) {\n    user = currentUser;\n    console.log(user);\n  }\n  const onClose = payload => {\n    console.log(payload);\n    setShow(payload);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex flex-column pt-4 pb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"d-flex justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"w-25\",\n          onClick: () => {\n            setShow(true);\n          },\n          children: \"ADD CONTACT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), show && /*#__PURE__*/_jsxDEV(Modals, {\n          show: show,\n          currentUser: currentUser,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), currentUser && /*#__PURE__*/_jsxDEV(ContactSearch, {\n        show: show,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactList, \"YK5TieTw97D0EaOc9wR1FOdAtdU=\", false, function () {\n  return [useNavigate];\n});\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","axios","Link","useNavigate","Button","Container","ContactSearch","showdataRoute","MyNavbar","Modals","jsxDEV","_jsxDEV","ContactList","_s","navigate","currentUser","setCurrentUser","undefined","contacts","setContacts","show","setShow","localStorage","getItem","JSON","parse","user","console","log","onClose","payload","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Videos/Contacts/client/src/Pages/ContactList.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// import Navbar from \"react-bootstrap/Navbar\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import InputGroup from \"react-bootstrap/InputGroup\";\r\nimport ContactSearch from \"../Utilities/ContactSearch\";\r\nimport { showdataRoute } from \"../Resources/ApiKeys\";\r\nimport MyNavbar from \"../Utilities/MyNavbar\";\r\nimport Modals from \"../Utilities/Modals\";\r\nconst ContactList = () => {\r\n  const navigate = useNavigate();\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  const [contacts, setContacts] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!localStorage.getItem(\"new-user\")) {\r\n        navigate(\"/login\");\r\n      } else {\r\n        setCurrentUser(await JSON.parse(localStorage.getItem(\"new-user\")));\r\n      }\r\n    })();\r\n  }, []);\r\n  let user = {}\r\n  if(currentUser){\r\n    user = currentUser\r\n    console.log(user)\r\n  }\r\n \r\n  const onClose = (payload) => {\r\n    console.log(payload);\r\n    setShow(payload);\r\n  };\r\n  \r\n   \r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n      <MyNavbar />\r\n      <Container className=\"d-flex flex-column pt-4 pb-3\">\r\n        <Container className=\"d-flex justify-content-center\">\r\n          <Button\r\n            className=\"w-25\"\r\n            onClick={() => {\r\n              setShow(true);\r\n            }}\r\n          >\r\n            ADD CONTACT\r\n          </Button>\r\n          {show && (\r\n            <Modals show={show} currentUser={currentUser} onClose={onClose} />\r\n          )}\r\n        </Container>\r\n\r\n        {currentUser && <ContactSearch show = {show} currentUser={currentUser} />}\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ContactList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}